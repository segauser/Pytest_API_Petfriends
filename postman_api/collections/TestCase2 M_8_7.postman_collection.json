{
	"info": {
		"_postman_id": "ce632303-1bc6-49d6-a02b-94dbd65b621e",
		"name": "TestCase2 M_8_7",
		"description": "Токен генерируется в процессе выполнения тест кейса при каждой итерации\n\nТестовые данные в TestData_M_8_7.csv\n\nВ рамках коллекции мы реализуем один простой сценарий:\n\n1. Пользователь получает ключ _API_.\n2. Пользователь добавляет питомца.\n3. Пользователь проверяет, что питомец добавился.\n4. Пользователь обновляет имя питомца\n5. Пользователь проверяет, что питомец обновлён\n6. Пользователь удаляет питомца.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12052308"
	},
	"item": [
		{
			"name": "/api/key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.variables.set(\"auth_key\", jsonData.key);\r",
							"console.log(jsonData);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Pre-request:', pm.variables.get(\"name\"));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "email",
						"value": "abuser@abuser.com",
						"type": "text"
					},
					{
						"key": "password",
						"value": "abuser",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/api/key",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "add pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    console.log(pm.variables.get(\"name\"));\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.variables.set(\"petid\", jsonData.id);\r",
							"    console.log(pm.variables.get(\"name\"));\r",
							"    console.log(jsonData);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Pre-request:', pm.variables.get(\"name\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "pet_photo",
							"type": "file",
							"src": "/F:/Desktop/dogTV.jpg"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					]
				},
				"description": "Load only .jpg"
			},
			"response": []
		},
		{
			"name": "/api/pets?filter=my_pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"first pets with new-created ID\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.variables.get(\"petid\")).to.eql(jsonData.pets[0].id);\r",
							"    console.log(jsonData);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"in response new name not equal old name\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.variables.get(\"name\")).to.not.equal(jsonData.name);\r",
							"    pm.collectionVariables.set(\"new_name\", jsonData.name);\r",
							"    console.log(jsonData);\r",
							"    console.log(pm.variables.get(\"name\"));\r",
							"    console.log(pm.variables.get(\"new_name\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Pre-request:', pm.variables.get(\"name\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{new_name}}",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "pet_photo",
							"type": "file",
							"src": "/F:/Desktop/dogTV.jpg"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/pets/:pet_id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets",
						":pet_id"
					],
					"variable": [
						{
							"key": "pet_id",
							"value": "{{petid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get my pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response new pets name equal variables name\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"new_name\")).to.equal(jsonData.pets[0].name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/pets/:pet_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept-Language",
						"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
						"type": "text"
					},
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/api/pets/:petid",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets",
						":petid"
					],
					"variable": [
						{
							"key": "petid",
							"value": "{{petid}}"
						}
					]
				},
				"description": "Load only .jpg"
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{auth_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "auth_key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_key",
			"value": "",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "https://petfriends.skillfactory.ru",
			"type": "string"
		},
		{
			"key": "name",
			"value": "",
			"type": "string"
		},
		{
			"key": "age",
			"value": "",
			"type": "string"
		},
		{
			"key": "type",
			"value": "",
			"type": "string"
		},
		{
			"key": "petid",
			"value": "",
			"type": "string"
		},
		{
			"key": "new_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "name2",
			"value": "",
			"type": "string"
		}
	]
}